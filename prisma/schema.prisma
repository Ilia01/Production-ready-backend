// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

enum SessionStatus {
  ACTIVE
  EXPIRED
  REVOKED
}

enum AuditAction {
  LOGIN
  LOGOUT
  REGISTER
  PASSWORD_CHANGE
  PROFILE_UPDATE
  TOKEN_REFRESH
  ADMIN_ACTION
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  passwordHash String
  role         UserRole @default(USER)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  // Relations
  sessions     Session[]
  auditLogs    AuditLog[]
}

model Session {
  id        String        @id @default(uuid())
  userId    String
  token     String        @unique
  status    SessionStatus @default(ACTIVE)
  ipAddress String?
  userAgent String?
  expiresAt DateTime
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  
  // Relations
  user      User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
  @@index([token])
  @@index([expiresAt])
}

model AuditLog {
  id          String      @id @default(uuid())
  userId      String?
  action      AuditAction
  resource    String?     // e.g., "User", "Session"
  resourceId  String?     // ID of the affected resource
  details     Json?       // Additional details about the action
  ipAddress   String?
  userAgent   String?
  createdAt   DateTime    @default(now())
  
  // Relations
  user        User?       @relation(fields: [userId], references: [id], onDelete: SetNull)
  
  @@index([userId])
  @@index([action])
  @@index([createdAt])
}
